var scene=document.getElementById("scene"),parallaxInstance=new Parallax(scene);const dhikerBot=document.getElementById("p1"),p1Exit=document.getElementById("p1-exit"),p1act=document.getElementById("p1-active"),html=document.getElementById("all"),gradeShape=document.getElementById("gradeShape"),gradeTop=document.getElementById("gradeTop"),gradeMid=document.getElementById("gradeMid"),gradeBack=document.getElementById("gradeBack"),element=dhikerBot;VanillaTilt.init(element),document.body.addEventListener("click",function(e){dhikerBot.contains(e.target)&&(p1act.removeAttribute("style"),p1act.classList.add("view")),p1Exit.contains(e.target)&&p1act.setAttribute("style","transform: translate3d(0,0,0);transition-duration: .6s")}),function(){window.setTimeout=window.setTimeout}();var smoothScr={iterr:30,tm:null,stopShow:function(){clearTimeout(this.tm),this.iterr=30},getRealTop:function(e){var t=e,n=0;do n+=t.offsetTop,t=t.offsetParent;while(t);return n},getPageScroll:function(){var e=window.pageYOffset||document.body.scrollTop||document.documentElement.scrollTop;return e},anim:function(e){this.stopShow();var t,n,a,i,o,d,r;return t=document.getElementById(e).offsetTop,a=this.getRealTop(document.getElementById(e).parentNode),n=this.getPageScroll(),(null===n||isNaN(n)||"undefined"===n)&&(n=0),i=t-n,i>a&&(o=t-a-n,d=1),a>i&&(o=n+a-t,d=-1),i!==a&&(r=~~(o/4+1)*d,this.iterr>1?this.iterr-=1:this.itter=0,window.scrollBy(0,r),this.tm=window.setTimeout(function(){smoothScr.anim(e)},this.iterr)),i===a?void this.stopShow():void 0}};if(window.innerWidth<768);else var waypoint=new Waypoint({element:document.getElementById("firstTrigger"),handler:function(e){"down"===e?(gradeShape.classList.add("bringDown"),gradeMid.classList.add("takeLeft"),gradeBack.classList.add("takeRight")):(gradeShape.classList.remove("bringDown"),gradeMid.classList.remove("takeLeft"),gradeBack.classList.remove("takeRight"))},offset:"50%"}),stickyWaypoint=new Waypoint({element:document.getElementById("2ndTrigger"),handler:function(e){"down"===e?(gradeShape.classList.add("bringDownDown"),gradeMid.classList.add("takeLeftDown"),gradeBack.classList.add("takeRightDown")):(gradeShape.classList.remove("bringDownDown"),gradeMid.classList.remove("takeLeftDown"),gradeBack.classList.remove("takeRightDown"))},offset:"-10%"});